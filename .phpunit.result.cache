C:37:"PHPUnit\Runner\DefaultTestResultCache":7864:{a:2:{s:7:"defects";a:23:{s:42:"MysqlTest::testCanCreateConnectionInstance";i:4;s:28:"ModelTest::testModelInstance";i:4;s:36:"ModelTest::testModelSaveInsertMethod";i:4;s:36:"ModelTest::testModelSaveUpdateMethod";i:4;s:32:"ModelTest::testModelDeleteMethod";i:4;s:38:"ModelTest::testModelDeleteWhenIdNotSet";i:4;s:34:"ModelTest::testModelHasOneRelation";i:4;s:35:"ModelTest::testModelHasManyRelation";i:4;s:37:"ModelTest::testModelBelongsToRelation";i:4;s:24:"PdoTest::testTableMethod";i:4;s:29:"QueryTest::testSelectFetchAll";i:4;s:29:"QueryTest::testSelectFetchOne";i:4;s:34:"QueryTest::testCompiledSelectQuery";i:3;s:29:"QueryTest::testGetMagicMethod";i:4;s:27:"QueryTest::testInsertMethod";i:4;s:27:"QueryTest::testUpdateMethod";i:4;s:27:"QueryTest::testDeleteMethod";i:4;s:26:"ConfigTest::testConfigData";i:3;s:43:"ConfigTest::testConfigFileNotFoundException";i:4;s:42:"ConfigTest::testConfigCanParseNestedValues";i:3;s:53:"ConfigTest::testConfigCanAccessValuesAsObjectProperty";i:4;s:35:"ConfigTest::testConfigCanAddNewKeys";i:3;s:55:"ConfigTest::testConfigDoesNotAllowModifyingExistingKeys";i:3;}s:5:"times";a:135:{s:26:"CacheTest::testConstructor";d:0.065;s:27:"CacheTest::testCanStoreItem";d:0.017;s:28:"CacheTest::testCanDeleteItem";d:0.014;s:30:"CacheTest::testCanStoreForever";d:0.015;s:28:"CacheTest::testCanFlushItems";d:0.023;s:25:"FileTest::testConstructor";d:0.004;s:26:"FileTest::testCanStoreItem";d:0.013;s:27:"FileTest::testCanDeleteItem";d:0.011;s:27:"FileTest::testCanFlushItems";d:0.02;s:26:"ConfigTest::testConfigData";d:0.031;s:43:"ConfigTest::testConfigFileNotFoundException";d:0.011;s:37:"ContainerTest::testContainerHasMethod";d:0.004;s:37:"ContainerTest::testContainerGetMethod";d:0.008;s:41:"ContainerTest::testContainerFactoryMethod";d:0.005;s:34:"MysqlTest::testConnectionException";d:0.052;s:42:"MysqlTest::testCanCreateConnectionInstance";d:0.007;s:43:"SqliteTest::testCanCreateConnectionInstance";d:0.004;s:45:"SqliteTest::testDatabaseFileNotFoundException";d:0.001;s:28:"ModelTest::testModelInstance";d:0.112;s:36:"ModelTest::testModelSaveInsertMethod";d:0.109;s:36:"ModelTest::testModelSaveUpdateMethod";d:0.104;s:32:"ModelTest::testModelDeleteMethod";d:0.128;s:38:"ModelTest::testModelDeleteWhenIdNotSet";d:0.107;s:34:"ModelTest::testModelHasOneRelation";d:0.109;s:35:"ModelTest::testModelHasManyRelation";d:0.108;s:37:"ModelTest::testModelBelongsToRelation";d:0.102;s:24:"PdoTest::testTableMethod";d:0.003;s:29:"QueryTest::testSelectFetchAll";d:0.177;s:29:"QueryTest::testSelectFetchOne";d:0.097;s:34:"QueryTest::testCompiledSelectQuery";d:0.102;s:29:"QueryTest::testGetMagicMethod";d:0.098;s:27:"QueryTest::testInsertMethod";d:0.101;s:27:"QueryTest::testUpdateMethod";d:0.115;s:27:"QueryTest::testDeleteMethod";d:0.115;s:30:"EventTest::testSubscribeMethod";d:0.003;s:32:"EventTest::testUnsubscribeMethod";d:0;s:37:"EventTest::testEventNotFoundException";d:0.003;s:50:"EventTest::testEventHandlerMethodNotFoundException";d:0.034;s:37:"EventTest::testEventSubscribersMethod";d:0;s:33:"EventTest::testEventDataGetMethod";d:0;s:34:"FilterTest::testFilterBeforeMethod";d:0.017;s:49:"FilterTest::testFilterBeforeMethodReturnsResponse";d:0;s:33:"FilterTest::testFilterAfterMethod";d:0;s:28:"RequestTest::testRequestPath";d:0;s:32:"RequestTest::testRequestBasePath";d:0;s:32:"RequestTest::testRequestFullPath";d:0;s:27:"RequestTest::testRequestUrl";d:0;s:35:"RequestTest::testRequestQueryString";d:0;s:33:"RequestTest::testRequestGetParams";d:0;s:34:"RequestTest::testRequestPostParams";d:0;s:30:"RequestTest::testRequestMethod";d:0;s:35:"RequestTest::testRequestMethodIsGet";d:0;s:36:"RequestTest::testRequestMethodIsPost";d:0;s:35:"RequestTest::testRequestMethodIsPut";d:0;s:37:"RequestTest::testRequestMethodIsPatch";d:0;s:38:"RequestTest::testRequestMethodIsDelete";d:0;s:31:"RequestTest::testRequestIsValid";d:0;s:30:"RequestTest::testRequestIsAjax";d:0;s:30:"RequestTest::testRequestIsJson";d:0;s:32:"RequestTest::testRequestIsSecure";d:0;s:30:"RequestTest::testRequestScheme";d:0;s:28:"RequestTest::testRequestHost";d:0;s:32:"RequestTest::testRequestProtocol";d:0;s:32:"RequestTest::testRequestSegments";d:0;s:39:"ResponseTest::testResponseSetCodeMethod";d:0;s:39:"ResponseTest::testResponseGetCodeMethod";d:0;s:42:"ResponseTest::testResponseSetMessageMethod";d:0;s:42:"ResponseTest::testResponseGetMessageMethod";d:0;s:39:"ResponseTest::testResponseSetTypeMethod";d:0;s:39:"ResponseTest::testResponseGetTypeMethod";d:0;s:41:"ResponseTest::testResponseSetHeaderMethod";d:0;s:42:"ResponseTest::testResponseSetHeadersMethod";d:0;s:42:"ResponseTest::testResponseGetHeadersMethod";d:0;s:39:"ResponseTest::testResponseSetBodyMethod";d:0;s:39:"ResponseTest::testResponseGetBodyMethod";d:0;s:30:"ResponseTest::testResponseSend";d:0.02;s:36:"ResponseTest::testResponseJsonMethod";d:0;s:35:"ResponseTest::testResponseXmlMethod";d:0;s:27:"LoggerTest::testConstructor";d:0.026;s:31:"LoggerTest::testCanLogEmergency";d:0.008;s:27:"LoggerTest::testCanLogAlert";d:0.006;s:30:"LoggerTest::testCanLogCritical";d:0.009;s:27:"LoggerTest::testCanLogError";d:0.007;s:29:"LoggerTest::testCanLogWarning";d:0.009;s:28:"LoggerTest::testCanLogNotice";d:0.006;s:26:"LoggerTest::testCanLogInfo";d:0.009;s:27:"LoggerTest::testCanLogDebug";d:0.007;s:42:"DispatcherTest::testRouteNotFoundException";d:0.017;s:47:"DispatcherTest::testControllerNotFoundException";d:0.003;s:43:"DispatcherTest::testActionNotFoundException";d:0.003;s:46:"DispatcherTest::testControllerActionInvocation";d:0;s:33:"RouteTest::testRoutePathException";d:0;s:33:"RouteTest::testRouteMetaException";d:0;s:44:"RouteTest::testRoutePathsRegisteredForMethod";d:0.002;s:30:"RouteTest::testRouteMatchesUrl";d:0.001;s:42:"RouteTest::testRouteShouldMapMultipleVerbs";d:0;s:43:"RouteTest::testRouteShouldMapAnyAllowedVerb";d:0;s:38:"RouteTest::testRouteMatchesGroupedUrls";d:0;s:45:"RouteTest::testRouteShouldResetScopeToDefault";d:0;s:46:"RouteTest::testRouteShouldMatchNestedGroupUrls";d:0;s:33:"RouterTest::testRouterCanParseUrl";d:0;s:42:"RouterTest::testRouterCanParseMultipleUrls";d:0.001;s:37:"RouterTest::testRouterCanParseUrlMeta";d:0;s:40:"RouterTest::testRouterCanParseBadUrlMeta";d:0.003;s:38:"RouterTest::testRouterCanParseRegexUrl";d:0;s:40:"RouterTest::testRouterCanParseComplexUrl";d:0;s:42:"RouterTest::testRouterCanParseGroupOptions";d:0;s:38:"ValidatorTest::testHasValidationErrors";d:0.022;s:40:"ValidatorTest::testHasNoValidationErrors";d:0.006;s:50:"ValidatorTest::testCreatesAppropriateErrorMessages";d:0;s:42:"ValidatorTest::testCanSetRulesIndividually";d:0.006;s:41:"ValidatorTest::testValidationRuleRequired";d:0;s:38:"ValidatorTest::testValidationRuleAlpha";d:0;s:38:"ValidatorTest::testValidationRuleAlnum";d:0.002;s:38:"ValidatorTest::testValidationRuleEmail";d:0;s:37:"ValidatorTest::testValidationRuleSlug";d:0.002;s:36:"ValidatorTest::testValidationRuleUrl";d:0.005;s:41:"ValidatorTest::testValidationRuleIpAdress";d:0.004;s:39:"ValidatorTest::testValidationRuleLength";d:0;s:36:"ValidatorTest::testValidationRuleMin";d:0;s:36:"ValidatorTest::testValidationRuleMax";d:0;s:40:"ValidatorTest::testValidationRuleBetween";d:0.002;s:37:"ValidatorTest::testValidationRuleDate";d:0.021;s:39:"ValidatorTest::testValidationRuleBefore";d:0.02;s:38:"ValidatorTest::testValidationRuleAfter";d:0.004;s:38:"ValidatorTest::testValidationRuleMatch";d:0.003;s:38:"ValidatorTest::testValidationRuleRegex";d:0.004;s:42:"ConfigTest::testConfigCanParseNestedValues";d:0.001;s:53:"ConfigTest::testConfigCanAccessValuesAsObjectProperty";d:0.001;s:50:"ConfigTest::testConfigCanAccessKeyAsObjectProperty";d:0.001;s:35:"ConfigTest::testConfigCanAddNewKeys";d:0;s:34:"ConfigTest::testConfigCanAddNewKey";d:0;s:55:"ConfigTest::testConfigDoesNotAllowModifyingExistingKeys";d:0.001;s:35:"ConfigTest::testConfigCanAccessKeys";d:0.007;s:40:"ConfigTest::testConfigCanParseNestedKeys";d:0.003;}}}